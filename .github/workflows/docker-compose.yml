name: CI/CD Docker-compose

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'master'
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'

jobs:
  # Test job (uncomment if needed)
  # test:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npm test

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Checkout source code
      - name: Check out source code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Cache Docker layers
      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login to GitHub Container Registry (GHCR)
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Build and push Docker image
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/${{ github.actor }}/quiz:${{ github.sha }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-go]
    steps:
      # Checkout source code
      - name: Check out source code
        uses: actions/checkout@v3

      # Pull Docker images
      - name: Pull Docker images
        run: docker-compose -f /home/ubuntu/actions-runner/_work/quiz/quiz/docker-compose.yml pull

      # Stop and remove existing containers
      - name: Stop and remove existing containers
        run: docker-compose -f /home/ubuntu/actions-runner/_work/quiz/quiz/docker-compose.yml down

      - name: Remove old Docker images
        run: docker image prune -f

      # Start services
      - name: Start services
        run: docker-compose -f /home/ubuntu/actions-runner/_work/quiz/quiz/docker-compose.yml up -d --build
